<!-- 1.wxml的格式 -->
<view></view>
<view class=""></view>

<!-- 2.Mushache语法 -->
<view>{{message}}</view>
<view>{{firstname}} {{lastname}}</view>
<view>{{firstname + ' ' +lastname}}</view>
<view>{{age >= 18 ? '成年人' : '未成年人'}}</view>
<view>{{nowTime}}</view>
<view class="{{isActive ? 'active' : ''}}">嘻嘻嘻嘻</view>
<button size="mini" 
        bindtap="handleSwitchColor">切换颜色</button>

<!-- 3.条件判断 -->
<view>--------------条件判断--------------</view>
<!-- wx:if的使用 -->
<view wx:if="{{isShow}}">美少女战士</view>
<button size="mini" bindtap="handleSwitchShow">显示/隐藏</button>

<!-- wx:elif/wx:else -->
<view>当前分数：{{score}}</view>
<view wx:if="{{score >= 90}}">优秀</view>
<view wx:elif="{{score >= 80}}">良好</view>
<view wx:elif="{{score >= 60}}">及格</view>
<view wx:else>不及格</view>
<button size="mini"
        disabled="{{isDisabled}}"
        bindtap="handleIncrement">分数递增10</button>

<!-- hidden -->
<!-- hidden时这个元素被创建出来，只是在页面不显示；
     而用wx:if时，这个元素不会被创建出来 -->
<!-- 如果是在需要频繁切换显示/隐藏的场景中建议用hidden,否则用wx:if -->
<view hidden="{{true}}">我是hidden的内容</view>
<view wx:if="{{isShow}}">我是wx:if的内容</view>

<!-- 4.列表渲染 -->
<!-- 4.1遍历数组/字符串/数字 -->
<view wx:for="{{['abc', 'def', 'ghijk']}}">{{item}} {{index}}</view>
<view wx:for="{{5}}">{{item}}</view>

<!-- 4.2 block标签 -->
<!-- block不会被进行渲染，比view性能更高 -->
<block wx:if="{{isShow}}">
  <text>哈哈哈哈哈哈哈哈</text>
  <button>按钮</button>
  <input placeholder="请输入" />
</block>

<view wx:for="{{2}}">
  <text>哈哈哈哈哈哈哈哈</text>
  <button>按钮</button>
  <input placeholder="请输入" />
</view>

<!-- 4.3 item,index起名字 -->
<view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="i">{{movie}} {{i}}</view>
<!-- 使用场景：多层遍历 -->
<!-- <block wx:for="{{nums}}" wx:for-item="innernum">
  <block wx:for="{{innernum}}">
    <view>{{item}}</view>
  </block>
</block> -->

<!-- 4.4 key的作用 -->
<!-- 高效的更新虚拟dom -->

<view>-------------template------------</view>
<!-- 对代码的复用：template,不常用 -->
<!-- <template name="contentItem">
  <button size="mini">{{btnText}}</button>
  <view>{{content}}</view>
</template> -->

<view>--------------模板导入------------</view>
<!-- 绝对路径和相对路径都可以导入 -->
<import src="../../wxml/template.wxml" />

<template is="contentItem" data="{{index: 0, content: '哈哈哈', btnText: '登录'}}"/>
<template is="contentItem" data="{{index: 0, content: '呵呵呵', btnText: '提交'}}"/>
<template is="contentItem" data="{{index: 0, content: '嘿嘿嘿', btnText: '取消'}}"/>
<!-- 结论：include是不能导入模板的，import不可以递归导入 -->




